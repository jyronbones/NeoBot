name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Set environment variables
      run: |
        echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" >> $GITHUB_ENV
        echo "OPENAI_MODEL_ENGINE=${{ secrets.OPENAI_MODEL_ENGINE }}" >> $GITHUB_ENV
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        echo "AZURE_APP_ID=${{ secrets.AZURE_APP_ID }}" >> $GITHUB_ENV
        echo "AZURE_APP_PASSWORD=${{ secrets.AZURE_APP_PASSWORD }}" >> $GITHUB_ENV
        echo "YOUR_WEATHERSTACK_API_KEY=${{ secrets.YOUR_WEATHERSTACK_API_KEY }}" >> $GITHUB_ENV
        echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> $GITHUB_ENV
        echo "FIXER_APP_KEY=${{ secrets.FIXER_APP_KEY }}" >> $GITHUB_ENV
        echo "NEWSAPI_KEY=${{ secrets.NEWSAPI_KEY }}" >> $GITHUB_ENV
        echo "ALPHA_VANTAGE_API_KEY=${{ secrets.ALPHA_VANTAGE_API_KEY }}" >> $GITHUB_ENV
        echo "MUSIC_MATCH_API_KEY=${{ secrets.MUSIC_MATCH_API_KEY }}" >> $GITHUB_ENV
        echo "AZURE_TRANSLATOR_KEY=${{ secrets.AZURE_TRANSLATOR_KEY }}" >> $GITHUB_ENV
        echo "SPOONACULAR_API_KEY=${{ secrets.SPOONACULAR_API_KEY }}" >> $GITHUB_ENV
        echo "DISCORD_LOGS_DB=${{ secrets.DISCORD_LOGS_DB }}" >> $GITHUB_ENV
        echo "DISCORD_LOGS_TABLE_NAME=${{ secrets.DISCORD_LOGS_TABLE_NAME }}" >> $GITHUB_ENV
        echo "DB_SERVER_NAME=${{ secrets.DB_SERVER_NAME }}" >> $GITHUB_ENV
        echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: pytest
